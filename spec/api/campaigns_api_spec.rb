=begin
#Connectwise REST API

#ConnectWise API

OpenAPI spec version: 1.0.0
Contact: platform@connectwise.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Connectwise::CampaignsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CampaignsApi' do
  before do
    # run before each test
    @instance = Connectwise::CampaignsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CampaignsApi' do
    it 'should create an instact of CampaignsApi' do
      expect(@instance).to be_instance_of(Connectwise::CampaignsApi)
    end
  end

  # unit tests for marketing_campaigns_count_get
  # 
  # Get Campaigns Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @return [Count]
  describe 'marketing_campaigns_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_get
  # 
  # Get Campaigns
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @option opts [String] :order_by 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<Campaign>]
  describe 'marketing_campaigns_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_activities_count_get
  # 
  # Get Campaign Activities Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'marketing_campaigns_id_activities_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_activities_get
  # 
  # Get Campaign Activities
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<ActivityReference>]
  describe 'marketing_campaigns_id_activities_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_delete
  # 
  # Delete Campaign By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'marketing_campaigns_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_get
  # 
  # Get Campaign By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'marketing_campaigns_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_opportunities_count_get
  # 
  # Get Campaign Opportunities Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'marketing_campaigns_id_opportunities_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_opportunities_get
  # 
  # Get Campaign Opportunities
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<OpportunityReference>]
  describe 'marketing_campaigns_id_opportunities_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_patch
  # 
  # Update Campaign
  # @param id 
  # @param operations 
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'marketing_campaigns_id_patch test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_id_put
  # 
  # Replace Campaign
  # @param id 
  # @param campaign 
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'marketing_campaigns_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marketing_campaigns_post
  # 
  # Create Campaign
  # @param campaign 
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'marketing_campaigns_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
