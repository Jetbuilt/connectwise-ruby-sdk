=begin
#Connectwise REST API

#ConnectWise API

OpenAPI spec version: 1.0.0
Contact: platform@connectwise.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Connectwise::DocumentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DocumentsApi' do
  before do
    # run before each test
    @instance = Connectwise::DocumentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DocumentsApi' do
    it 'should create an instact of DocumentsApi' do
      expect(@instance).to be_instance_of(Connectwise::DocumentsApi)
    end
  end

  # unit tests for system_documents_count_get
  # 
  # Get Documents Info Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :record_type 
  # @option opts [Integer] :record_id 
  # @return [Count]
  describe 'system_documents_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_get
  # 
  # Get Documents Info
  # @param [Hash] opts the optional parameters
  # @option opts [String] :record_type 
  # @option opts [Integer] :record_id 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<DocumentInfo>]
  describe 'system_documents_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_delete
  # 
  # Delete Document Info By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'system_documents_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_download_get
  # 
  # Download Document
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :last_modified 
  # @return [nil]
  describe 'system_documents_id_download_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_get
  # 
  # Get Document Info By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DocumentInfo]
  describe 'system_documents_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_post
  # 
  # Update Document By Id
  # @param id 
  # @param record_id Entity id
  # @param record_type Entity type
  # @param title Document title
  # @param url Document url
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file File to upload
  # @option opts [BOOLEAN] :private_flag Indicates if document is private
  # @option opts [BOOLEAN] :read_only_flag Indicates if document is readonly
  # @return [DocumentInfo]
  describe 'system_documents_id_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_post
  # 
  # Insert Document
  # @param record_id Entity id
  # @param record_type Entity type
  # @param title Document title
  # @param url Document url
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file File to upload
  # @option opts [BOOLEAN] :private_flag Indicates if document is private
  # @option opts [BOOLEAN] :read_only_flag Indicates if document is readonly
  # @return [DocumentInfo]
  describe 'system_documents_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_uploadsample_get
  # 
  # Get Upload Sample Page
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'system_documents_uploadsample_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
