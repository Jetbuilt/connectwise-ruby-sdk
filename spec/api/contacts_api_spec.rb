=begin
#Connectwise REST API

#ConnectWise API

OpenAPI spec version: 1.0.0
Contact: platform@connectwise.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Connectwise::ContactsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContactsApi' do
  before do
    # run before each test
    @instance = Connectwise::ContactsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactsApi' do
    it 'should create an instact of ContactsApi' do
      expect(@instance).to be_instance_of(Connectwise::ContactsApi)
    end
  end

  # unit tests for company_contacts_count_get
  # 
  # Get Contacts Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @return [Count]
  describe 'company_contacts_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_get
  # 
  # Get Contacts
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @option opts [String] :order_by 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<Contact>]
  describe 'company_contacts_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_delete
  # 
  # Delete Contact By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :transfer_contact_id 
  # @return [nil]
  describe 'company_contacts_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_get
  # 
  # Get Contact By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'company_contacts_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_image_get
  # 
  # Get Contact Image
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :use_default_flag 
  # @option opts [String] :last_modified 
  # @return [nil]
  describe 'company_contacts_id_image_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_patch
  # 
  # Update Contact
  # @param id 
  # @param operations 
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'company_contacts_id_patch test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_portal_security_get
  # 
  # Get Portal Security
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Array<PortalSecurity>]
  describe 'company_contacts_id_portal_security_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_id_put
  # 
  # Replace Contact
  # @param id 
  # @param contact 
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'company_contacts_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_post
  # 
  # Create Contact
  # @param contact 
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'company_contacts_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_request_password_post
  # 
  # Request Password
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'company_contacts_request_password_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_contacts_validate_portal_credentials_post
  # 
  # Validate Portal Credentials
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [ValidatePortalResponse]
  describe 'company_contacts_validate_portal_credentials_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
