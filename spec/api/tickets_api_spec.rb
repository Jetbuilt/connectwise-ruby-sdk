=begin
#Connectwise REST API

#ConnectWise API

OpenAPI spec version: 1.0.0
Contact: platform@connectwise.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Connectwise::TicketsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TicketsApi' do
  before do
    # run before each test
    @instance = Connectwise::TicketsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TicketsApi' do
    it 'should create an instact of TicketsApi' do
      expect(@instance).to be_instance_of(Connectwise::TicketsApi)
    end
  end

  # unit tests for service_tickets_count_get
  # 
  # Get Tickets Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @return [Count]
  describe 'service_tickets_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_get
  # 
  # Get Tickets
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @option opts [String] :order_by 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<Ticket>]
  describe 'service_tickets_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_activities_count_get
  # 
  # Get Ticket Activities Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_activities_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_activities_get
  # 
  # Get Ticket Activities
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<ActivityReference>]
  describe 'service_tickets_id_activities_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_configurations_config_id_delete
  # 
  # Delete Configuration Association
  # @param id 
  # @param config_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'service_tickets_id_configurations_config_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_configurations_config_id_get
  # 
  # Get Configuration Association
  # @param id 
  # @param config_id 
  # @param [Hash] opts the optional parameters
  # @return [ConfigurationReference]
  describe 'service_tickets_id_configurations_config_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_configurations_count_get
  # 
  # Get Ticket Configurations Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_configurations_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_configurations_get
  # 
  # Get Ticket Configurations
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<ConfigurationReference>]
  describe 'service_tickets_id_configurations_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_configurations_post
  # 
  # Create Configuration Association
  # @param id 
  # @param configuration 
  # @param [Hash] opts the optional parameters
  # @return [ConfigurationReference]
  describe 'service_tickets_id_configurations_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_delete
  # 
  # Delete Ticket By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'service_tickets_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_documents_count_get
  # 
  # Get Ticket Documents Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_documents_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_documents_get
  # 
  # Get Ticket Documents
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<DocumentReference>]
  describe 'service_tickets_id_documents_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_get
  # 
  # Get Ticket By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Ticket]
  describe 'service_tickets_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_patch
  # 
  # Update Ticket
  # @param id 
  # @param operations 
  # @param [Hash] opts the optional parameters
  # @return [Ticket]
  describe 'service_tickets_id_patch test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_products_count_get
  # 
  # Get Ticket Products Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_products_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_products_get
  # 
  # Get Ticket Products
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<ProductReference>]
  describe 'service_tickets_id_products_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_put
  # 
  # Replace Ticket
  # @param id 
  # @param ticket 
  # @param [Hash] opts the optional parameters
  # @return [Ticket]
  describe 'service_tickets_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_scheduleentries_count_get
  # 
  # Get Ticket Schedule Entries Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_scheduleentries_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_scheduleentries_get
  # 
  # Get Ticket Schedule Entries
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<ScheduleEntryReference>]
  describe 'service_tickets_id_scheduleentries_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_timeentries_count_get
  # 
  # Get Ticket Time Entries Count
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Count]
  describe 'service_tickets_id_timeentries_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_id_timeentries_get
  # 
  # Get Ticket Time Entries
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<TimeEntryReference>]
  describe 'service_tickets_id_timeentries_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_post
  # 
  # Create Ticket
  # @param ticket 
  # @param [Hash] opts the optional parameters
  # @return [Ticket]
  describe 'service_tickets_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_tickets_search_post
  # 
  # Ticket Search
  # @param filter_values 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<Ticket>]
  describe 'service_tickets_search_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
